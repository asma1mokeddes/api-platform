security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_doc:
            pattern: ^/api/doc
            security: false
        main:
            json_login:
                check_path: login
            logout:
                path: api_logout
            stateless: true
            jwt: ~
            
        register:
            pattern: ^/register
            methods: [POST]
            security: false
    
    access_control:
        # Autorise l'accès anonyme à la page de connexion
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        
        # Nécessite le rôle ROLE_ADMIN pour toutes les URL sous /admin
        - { path: ^/admin, roles: ROLE_ADMIN }
        
        # Restreint l'accès à la route de création de compte uniquement via POST
        - { path: ^/register, methods: [POST], roles: IS_AUTHENTICATED_ANONYMOUSLY }
        
        # Exige que l'utilisateur soit authentifié pour tout autre chemin
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
